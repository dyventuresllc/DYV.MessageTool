//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DYV.MessageTool.EventHandlers.DataAccess.Queries {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class INSERT {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal INSERT() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DYV.MessageTool.EventHandlers.DataAccess.Queries.INSERT", typeof(INSERT).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO EDDS.mt.EmailQueue(ArtifactID, WorkspaceID, MsgArtifactID, FirstName, EmailAddress, [Subject], [Body])
        ///VALUES (@UserArtifactID, @WorkspaceID, @MsgArtifactID, @FirstName, @EmailAddress, @Subject, @Body);.
        /// </summary>
        internal static string TstUsr_toQueue {
            get {
                return ResourceManager.GetString("TstUsr_toQueue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO EDDS.mt.EmailQueue(ArtifactID, WorkspaceID, MsgArtifactID, FirstName, EmailAddress, [Subject], [Body])
        ///SELECT DISTINCT
        ///	eu.ArtifactID, @WorkspaceID ,@MsgArtifactID, eu.FirstName, eu.EmailAddress, @Subject, @Body
        ///FROM EDDS.eddsdbo.[ExtendedUser] eu WITH (NOLOCK)
        ///JOIN EDDS.eddsdbo.Artifact a WITH (NOLOCK)
        ///	ON eu.EmailPreference = a.ArtifactID
        ///JOIN EDDS.eddsdbo.UserStatus us WITH (NOLOCK)
        ///	ON us.UserID = eu.ArtifactID
        ///LEFT JOIN EDDS.mt.EmailQueue eq
        ///	ON eq.ArtifactID = eu.ArtifactID
        ///WHERE [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Usrs_Active_toQueue {
            get {
                return ResourceManager.GetString("Usrs_Active_toQueue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO EDDS.mt.EmailQueue(ArtifactID, WorkspaceID, MsgArtifactID, FirstName, EmailAddress, [Subject], [Body])
        ///SELECT
        ///	eu.ArtifactID, @WorkspaceID, @MsgArtifactID, eu.FirstName, eu.EmailAddress, @Subject, @Body
        ///FROM EDDS.eddsdbo.[ExtendedUser] eu WITH (NOLOCK)
        ///JOIN EDDS.eddsdbo.Artifact a WITH (NOLOCK)
        ///	ON eu.EmailPreference = a.ArtifactID
        ///LEFT JOIN EDDS.mt.EmailQueue eq
        ///	ON eq.ArtifactID = eu.ArtifactID
        ///WHERE 
        ///	SUBSTRING(eu.EmailAddress,CHARINDEX(&apos;@&apos;,eu.EmailAddress)+1,(LEN(eu.EmailAddress)-CH [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Usrs_All_toQueue {
            get {
                return ResourceManager.GetString("Usrs_All_toQueue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO EDDS.mt.EmailQueue(ArtifactID, WorksapceID, MsgArtifactID, FirstName, EmailAddress, [Subject], [Body])
        ///SELECT
        ///	eu.ArtifactID, @WorkspaceID, @MsgArtifactID, eu.FirstName, eu.EmailAddress, @Subject, @Body
        ///FROM EDDS.eddsdbo.[ExtendedUser] eu WITH (NOLOCK)
        ///JOIN EDDS.eddsdbo.Artifact a WITH (NOLOCK)
        ///	ON eu.EmailPreference = a.ArtifactID
        ///LEFT JOIN EDDS.mt.EmailQueue eq
        ///	ON eq.ArtifactID = eu.ArtifactID
        ///WHERE 
        ///	SUBSTRING(eu.EmailAddress,CHARINDEX(&apos;@&apos;,eu.EmailAddress)+1,(LEN(eu.EmailAddress)-CH [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Usrs_Enabled_toQueue {
            get {
                return ResourceManager.GetString("Usrs_Enabled_toQueue", resourceCulture);
            }
        }
    }
}
